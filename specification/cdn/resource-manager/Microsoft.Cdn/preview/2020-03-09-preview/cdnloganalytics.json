{
  "swagger": "2.0",
  "info": {
    "version": "2020-03-09-preview",
    "title": "CdnLogAnalytics",
    "description": "Description of the new service",
    "x-ms-code-generation-settings": {
      "name": "cdnloganalyticsClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsMetrics": {
      "post": {
        "tags": [
          "LogAnalytics"
        ],
        "operationId": "LogAnalytics_GetLogAnalyticsMetrics",
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsMetrics": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsMetrics.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/MetricsRequestParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/MetricsResponse"
            }
          },
          "default": {
            "description": "CDN Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsRankings": {
      "post": {
        "tags": [
          "LogAnalytics"
        ],
        "operationId": "LogAnalytics_GetLogAnalyticsRankings",
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsRankings": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsRankings.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/RankingsRequestParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/RankingsResponse"
            }
          },
          "default": {
            "description": "CDN Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsLocations": {
      "post": {
        "tags": [
          "LogAnalytics"
        ],
        "operationId": "LogAnalytics_GetLogAnalyticsLocations",
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsLocations": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsLocations.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/ContinentsResponse"
            }
          },
          "default": {
            "description": "CDN Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsResources": {
      "post": {
        "tags": [
          "LogAnalytics"
        ],
        "operationId": "LogAnalytics_GetLogAnalyticsResources",
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsResources": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsResources.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/ResourcesResponse"
            }
          },
          "default": {
            "description": "CDN Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsMetrics": {
      "post": {
        "tags": [
          "WafLogAnalytics"
        ],
        "operationId": "LogAnalytics_GetLogAnalyticsMetrics",
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsMetrics": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsMetrics.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/WafMetricsRequestParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/WafMetricsResponse"
            }
          },
          "default": {
            "description": "CDN Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsRankings": {
      "post": {
        "tags": [
          "WafLogAnalytics"
        ],
        "operationId": "LogAnalytics_GetLogAnalyticsRankings",
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsRankings": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsRankings.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/WafRankingsRequestParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/WafRankingsResponse"
            }
          },
          "default": {
            "description": "CDN Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "MetricsRequest": {
      "type": "object",
      "required": [
        "metrics",
        "dateTimeBegin",
        "dateTimeEnd",
        "granularity"
      ],
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "clientRequestCount",
              "clientRequestTraffic",
              "clientRequestBandwidth",
              "originRequestTraffic",
              "originRequestBandwidth"
            ]
          }
        },
        "groupBy": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "applicationProtocol",
              "cacheHitMiss",
              "httpStatusCode"
            ]
          }
        },
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "granularity": {
          "type": "string",
          "enum": [
            "PT5M",
            "PT1H",
            "P1D"
          ]
        },
        "continents": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "africa",
              "antarctica",
              "asia",
              "australia",
              "europe",
              "northAmerica",
              "southAmerica"
            ]
          }
        },
        "countryOrRegions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customDomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetricsResponse": {
      "description": "",
      "properties": {
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "granularity": {
          "type": "string",
          "enum": [
            "PT5M",
            "PT1H",
            "P1D"
          ]
        },
        "series": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "metric": {
                "type": "string"
              },
              "unit": {
                "type": "string",
                "enum": [
                  "count",
                  "bytes",
                  "bitsPerSecond"
                ]
              },
              "groups": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dateTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "value": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "RankingsRequest": {
      "type": "object",
      "required": [
        "rankings",
        "metrics",
        "maxRanking",
        "dateTimeBegin",
        "dateTimeEnd"
      ],
      "properties": {
        "rankings": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "url",
              "referrer",
              "countryOrRegions"
            ]
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "clientRequestCount",
              "clientRequestTraffic",
              "clientRequestBandwidth",
              "originRequestTraffic",
              "originRequestBandwidth"
            ]
          }
        },
        "maxRanking": {
          "type": "number"
        },
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customDomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RankingsResponse": {
      "description": "",
      "properties": {
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "tables": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ranking": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "metric": {
                            "type": "string"
                          },
                          "value": {
                            "type": "integer"
                          },
                          "percentage": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ContinentsResponse": {
      "description": "",
      "properties": {
        "continents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        },
        "countryOrRegions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "continentId": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ResourcesResponse": {
      "description": "",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "history": {
                "type": "boolean"
              }
            }
          }
        },
        "customDomains": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "endpointId": {
                "type": "string"
              },
              "history": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "WafMetricsRequest": {
      "type": "object",
      "required": [
        "metrics",
        "dateTimeBegin",
        "dateTimeEnd",
        "granularity"
      ],
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "requestCount"
            ]
          }
        },
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "granularity": {
          "type": "string",
          "enum": [
            "PT5M",
            "PT1H",
            "P1D"
          ]
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "allow",
              "block",
              "log",
              "redirect"
            ]
          }
        },
        "ruleTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "managed",
              "custom"
            ]
          }
        }
      }
    },
    "WafMetricsResponse": {
      "description": "",
      "properties": {
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "granularity": {
          "type": "string",
          "enum": [
            "PT5M",
            "PT1H",
            "P1D"
          ]
        },
        "series": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "metric": {
                "type": "string"
              },
              "unit": {
                "type": "string",
                "enum": [
                  "count"
                ]
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dateTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "value": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "WafRankingsRequest": {
      "type": "object",
      "required": [
        "groupBy",
        "metrics",
        "maxRanking",
        "dateTimeBegin",
        "dateTimeEnd"
      ],
      "properties": {
        "groupBy": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "action",
              "ruleGroup",
              "ruleId",
              "countryOrRegions",
              "ipAddress",
              "url",
              "userAgent"
            ]
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "requestCount"
            ]
          }
        },
        "maxRanking": {
          "type": "number"
        },
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "allow",
              "block",
              "log",
              "redirect"
            ]
          }
        },
        "ruleTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "managed",
              "custom"
            ]
          }
        }
      }
    },
    "WafRankingsResponse": {
      "description": "",
      "properties": {
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "groupValues": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "metric": {
                      "type": "string"
                    },
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response indicates CDN service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "readOnly": true,
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "ProfileNameParameter": {
      "name": "profileName",
      "in": "path",
      "description": "Name of the CDN profile which is unique within the resource group.",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request."
    },
    "MetricsRequestParameter": {
      "name": "metricsRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/MetricsRequest"
      }
    },
    "RankingsRequestParameter": {
      "name": "rankingsRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/RankingsRequest"
      }
    },
    "WafMetricsRequestParameter": {
      "name": "wafMetricsRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/WafMetricsRequest"
      }
    },
    "WafRankingsRequestParameter": {
      "name": "wafRankingsRequest",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/WafRankingsRequest"
      }
    }
  }
}
